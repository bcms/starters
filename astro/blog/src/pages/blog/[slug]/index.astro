---
import type {
    BlogEntry,
    BlogEntryMetaItem,
} from '../../../../bcms/types/ts';
import { blogToLite } from '../../../utils/blog';
import { toReadableDate } from '../../../utils/date';
import { type EntryContentParsedItem } from '@thebcms/types';

import Layout from '../../../layouts/Layout.astro';
import { BCMSImage } from '@thebcms/components-react';
import { ContentManager } from '../../../components/ContentManager';
import BlogCard from '../../../components/blogs/Card';
import ArrowIcon from '../../../assets/icons/arrow.svg?raw';
import { TopGradient } from '../../../components/TopGradient';
import { bcmsPrivate } from '../../../bcms-private';
import { bcmsPublic } from '../../../bcms-public';

export async function getStaticPaths() {
    const blogs = (await bcmsPrivate.entry.getAll('blog')) as BlogEntry[];
    return blogs.map((e) => ({
        params: {
            slug: e.meta.en?.slug || '',
        },
    }));
}

const { slug } = Astro.params;

const blogs = (await bcmsPrivate.entry.getAll('blog')) as BlogEntry[];
const blogEntry = blogs.find((e) => e.meta.en?.slug === slug);
const otherBlogs = blogs
    .filter((e) => e.meta.en?.slug !== slug)
    .map((e) => blogToLite(e));
const data = {
    meta: blogEntry?.meta.en as BlogEntryMetaItem,
    content: blogEntry?.content.en as EntryContentParsedItem[],
};

const clientConfig = bcmsPublic.getConfig();

---

<Layout title={data.meta.title}>
    <div>
        <div class="relative pt-10 pb-8 md:py-[72px] lg:pb-[104px]">
            <div class="container">
                <div class="md:mb-20 lg:mb-[128px]">
                    <div
                        class="flex flex-col items-center mb-8 md:mb-14 lg:mb-20"
                    >
                        <div
                            class="text-sm leading-none tracking-[-0.41px] text-appGray-600 mb-2.5 md:text-base md:leading-none lg:text-xl lg:leading-none lg:mb-5"
                        >
                            {toReadableDate(data.meta.date.timestamp)}
                        </div>
                        <h1
                            class="leading-none font-medium tracking-[-0.41px] md:text-2xl md:leading-none lg:text-[56px] lg:leading-none"
                        >
                            {data.meta.title}
                        </h1>
                    </div>
                    <BCMSImage
                        client:load
                        media={data.meta.cover_image}
                        clientConfig={clientConfig}
                        className="aspect-[2.07] rounded-lg overflow-hidden w-full object-cover mb-6 md:mb-8 lg:aspect-[2.43] lg:rounded-2xl lg:mb-12"
                    />
                    <ContentManager client:load items={data.content} className="prose" />
                </div>
                <div class="max-md:hidden">
                    <div
                        class="flex items-center justify-between mb-8 lg:mb-12"
                    >
                        <h2
                            class="text-lg leading-none font-medium tracking-[-0.41px] lg:text-[32px] lg:leading-none"
                        >
                            Other posts
                        </h2>
                        <a
                            href="/blog"
                            class="flex items-center px-[15px] py-2.5 bg-appAccent rounded-[32px]"
                        >
                            <span
                                class="leading-none tracking-[-0.41px] mr-2 lg:text-xl lg:leading-none"
                            >
                                See all posts
                            </span>
                            <div
                                class="w-[14px] h-[14px] md:w-4 md:h-4 lg:w-5 lg:h-5"
                            >
                                <Fragment use:html={ArrowIcon}></Fragment>
                            </div>
                        </a>
                    </div>
                    <div
                        class="grid grid-cols-2 auto-rows-fr gap-6 p-4 border border-appGray-300 rounded-2xl lg:grid-cols-3 xl:gap-10 xl:p-8"
                    >
                        {
                            otherBlogs.map((blog) => (
                                <BlogCard
                                    client:load
                                    blog={blog}
                                    bcmsConfig={clientConfig}
                                />
                            ))
                        }
                    </div>
                </div>
            </div>
            <TopGradient />
        </div>
    </div>
</Layout>
