---
import type { ProductEntry } from '../../../bcms/types/ts';
import type { ProductGenderEntryMetaItem } from '../../../bcms/types/ts';
import type {
    ProductCategoryEntry,
    ProductCategoryEntryMetaItem,
} from '../../../bcms/types/ts';
import type { ProductBrandEntryMetaItem } from '../../../bcms/types/ts';
import { productToLite } from '../../utils/product';

import Layout from '../../layouts/Layout.astro';
import ProductsPageWrapper from '../../components/shop/products/PageWrapper';
import { bcmsPrivate } from '../../bcms-private';
import { bcmsPublic } from '../../bcms-public';

const products = (await bcmsPrivate.entry.getAll('product')) as ProductEntry[];

const data = {
    products: products.map((e) => productToLite(e)),
    genders: products
        .map((e) => e.meta.en?.gender.meta.en as ProductGenderEntryMetaItem)
        .filter((e, _, arr) => arr.find((i) => i.slug === e.slug) === e),
    categories: products
        .map((e) =>
            (e.meta.en?.categories as ProductCategoryEntry[]).map(
                (i) => i.meta.en as ProductCategoryEntryMetaItem,
            ),
        )
        .flat()
        .filter((e, _, arr) => arr.find((i) => i.slug === e.slug) === e),
    brands: products
        .map((e) => e.meta.en?.brand.meta.en as ProductBrandEntryMetaItem)
        .filter((e, _, arr) => arr.find((i) => i.slug === e.slug) === e),
};

const clientConfig = bcmsPublic.getConfig();
---

<Layout title={`Products - Moda`}>
    <ProductsPageWrapper client:load data={data} bcms={clientConfig} />
</Layout>
