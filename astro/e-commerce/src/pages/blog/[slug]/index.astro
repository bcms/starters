---
import type {
    BlogEntry,
    BlogEntryMetaItem,
} from '../../../../bcms/types/ts';
import { type EntryContentParsedItem } from '@thebcms/types';

import Layout from '../../../layouts/Layout.astro';
import BlogPagesWrapper from '../../../components/blogs/PageWrapper';
import Card from '../../../components/blogs/Card';
import { BCMSImage } from '@thebcms/components-react';
import ContentManager from '../../../components/ContentManager';
import { bcmsPrivate } from '../../../bcms-private';
import { bcmsPublic } from '../../../bcms-public';

export async function getStaticPaths() {
    const blogs = (await bcmsPrivate.entry.getAll('blog')) as BlogEntry[];
    return blogs.map((e) => ({
        params: {
            slug: e.meta.en?.slug || '',
        },
    }));
}

const { slug } = Astro.params;

const blogs = (await bcmsPrivate.entry.getAll('blog')) as BlogEntry[];
const blog = blogs.find((e) => e.meta.en?.slug === slug);

if (!blog) {
    return notFound();
}

const data = {
    meta: blog.meta.en as BlogEntryMetaItem,
    content: blog.content.en as EntryContentParsedItem[],
};

const otherBlogs = blogs
    .filter((e) => e.meta.en?.slug !== blog.meta.en?.slug)
    .map((e) => e.meta.en as BlogEntryMetaItem)
    .sort((a, b) => b.date.timestamp - a.date.timestamp)
    .slice(0, 3);

const formattedDate = (date: number) => {
    return new Date(date).toLocaleDateString('en-US', {
        year: 'numeric',
        month: 'long',
        day: 'numeric',
    });
};

const clientConfig = bcmsPublic.getConfig();
---

<Layout title={`${data.meta.title} - Moda`}>
    <BlogPagesWrapper client:load bcms={clientConfig}>
        <div class="container pb-14 md:pb-20 lg:pb-[136px]">
            <div
                class="relative flex items-end p-4 min-h-[300px] max-w-full aspect-[2.47] mb-10 lg:p-12"
            >
                <div class="relative z-10">
                    <div
                        class="flex items-center gap-1.5 leading-none tracking-[-2%] text-appGray-300 mb-2.5 md:text-lg"
                    >
                        <div>{formattedDate(data.meta.date.timestamp)}</div>
                        <div class="w-1 h-1 rounded-full bg-current mt-1"></div>
                        <div>By {data.meta.author.meta.en?.title}</div>
                    </div>
                    <h1
                        class="text-2xl leading-none tracking-[-2%] text-white mb-3 lg:text-[40px]"
                    >
                        {data.meta.title}
                    </h1>
                </div>
                <div class="absolute top-0 left-0 size-full">
                    <BCMSImage
                        client:load
                        media={data.meta.media_image}
                        clientConfig={clientConfig}
                        className="size-full object-cover"
                    />
                </div>
                <div class="absolute inset-0 bg-black/50"></div>
            </div>
            <div
                class="grid grid-cols-1 gap-10 items-start lg:grid-cols-[1fr,400px] lg:gap-16 xl:grid-cols-[1fr,600px]"
            >
                <ContentManager
                    client:load
                    items={data.content}
                    className="blog--content"
                />
                <div class="border border-appGray-300 p-4 lg:p-8">
                    <div
                        class="flex flex-col items-center gap-5 justify-between text-xl leading-none tracking-[-2%] mb-6 lg:text-[24px] lg:flex-row"
                    >
                        <div>Others you may like</div>
                        <a href="/blog" class="underline"> See all </a>
                    </div>
                    <div class="grid grid-cols-1 gap-8">
                        {
                            otherBlogs.map((e) => {
                                return (
                                    <Card card={e} bcms={clientConfig} />
                                );
                            })
                        }
                    </div>
                </div>
            </div>
        </div>
    </BlogPagesWrapper>
</Layout>

<style is:global>
    .blog--content h2 {
        @apply text-2xl leading-none tracking-[-2%] mt-10 mb-4;
    }
    .blog--content p {
        @apply leading-[1.3] text-appGray-600 mb-2.5;
    }
</style>
